How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    First of all I didnot have to go through lines of code to spot the error.
    Second, a lot times you miss subtle typos but the machine never misses.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Automatic backup, crash recovery, more liberal at trying different coding,
    time saving being freed from manually saving different codes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro; logical intervals, ideal number of versions
    Cons; safer against neglect and crashes, power cuts etc.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is programmed to serve for coders where often a number of files are 
    simultaneously changed where as  Google Docs is used for everyday files.


How can you use the commands git log and git diff to view the history of files?

    Git log to find versions that have been created and diff to spot what were changed
    to revert to that version if needed.

How might using version control make you more confident to make changes that
could break something?

    Experiment with new properties and fall back to working version whenever needed.

Now that you have your workspace set up, what do you want to try using Git for?

    Udacity Androis Studio course :)
